// Generated by CoffeeScript 1.3.3
(function() {
  var block_type, matrix_sub_area, x, y;

  matrix_sub_area = function(matrix, x, y, width, height) {
    var row, _i, _len, _ref, _results;
    _ref = matrix.slice(y, (y + height) + 1 || 9e9);
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      row = _ref[_i];
      _results.push(row.slice(x, (x + width) + 1 || 9e9));
    }
    return _results;
  };

  block_type = function(height) {
    if (height <= .3) {
      return 2;
    }
    if ((.3 < height && height < .7)) {
      return 1;
    }
    return 3;
  };

  window.load_scene = function() {
    return window.scene = matrix_sub_area(world, current_scene.x * width, current_scene.y * height, width, height);
  };

  window.width = 20;

  window.height = 20;

  window.scenes = 2;

  window.current_scene = {
    x: 0,
    y: 0
  };

  window.world_width = width * scenes;

  window.world_height = height * scenes;

  window.tile_size = 20;

  window.perlin_size = 5;

  window.screen_width = width * tile_size;

  window.screen_height = height * tile_size;

  window.ctx = null;

  window.solid_tiles = [2, 3];

  window.scene = [];

  window.world = (function() {
    var _i, _ref, _results;
    _results = [];
    for (y = _i = 0, _ref = world_height - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; y = 0 <= _ref ? ++_i : --_i) {
      _results.push((function() {
        var _j, _ref1, _results1;
        _results1 = [];
        for (x = _j = 0, _ref1 = world_width - 1; 0 <= _ref1 ? _j <= _ref1 : _j >= _ref1; x = 0 <= _ref1 ? ++_j : --_j) {
          _results1.push(block_type(PerlinNoise.noise(perlin_size * x / world_width, perlin_size * y / world_height, .8)));
        }
        return _results1;
      })());
    }
    return _results;
  })();

}).call(this);
